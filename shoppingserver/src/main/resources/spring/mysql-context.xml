<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.qx.dao.impl,com.qx.service.impl" />
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

		<property name="locations">

			<value>classpath:jdbc/jdbc_mysql.properties</value>

		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>


	<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqldataSource" />
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<!-- 注册Mapper方式一 <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="org.hyn.maper.UserMapper"/> <property 
		name="sqlSessionFactory" ref="sqlSessionFactory"/> </bean> -->

	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper ，配置如下： -->

	<!-- <bean id='login' class="com.zhanghong.action.loginAction"> <property 
		name="userservice"> <ref bean="userService"/> </property> </bean> -->
	<bean class="com.qx.utils.XBasicDataSource" name="mysqldataSource"
		destroy-method='close'>
		<property name="driverClassName">
			<value>${mysql.driver}</value>
		</property>
		<property name="url">
			<value>${mysql.url}</value>
		</property>
		<property name="username">
			<value>${mysql.username}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>

	</bean>


	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean name="mysqlsessionFactory" id="mysqlsessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="mysqldataSource" />
		<!-- <property name="configLocation" value="classpath:hibernate.cfg.xml"></property> -->
		<property name="mappingResources">
			<list>
				<value>com/qx/model/Addressinfo.hbm.xml</value>
				<value>com/qx/model/Admininfo.hbm.xml</value>
				<value>com/qx/model/Cartinfo.hbm.xml</value>
				<value>com/qx/model/Favoriteinfo.hbm.xml</value>
				<value>com/qx/model/Goodsinfo.hbm.xml</value>
				<value>com/qx/model/Level1.hbm.xml</value>
				<value>com/qx/model/Level2.hbm.xml</value>
				<value>com/qx/model/Level3.hbm.xml</value>
				<value>com/qx/model/Loginfo.hbm.xml</value>
				<value>com/qx/model/Orderinfo.hbm.xml</value>
				<value>com/qx/model/Pingjiainfo.hbm.xml</value>
				<value>com/qx/model/Userinfo.hbm.xml</value>
				<value>com/qx/model/SubOrderinfo.hbm.xml</value>
				<value>com/qx/model/Activity.hbm.xml</value>
				<value>com/qx/model/Activitytype.hbm.xml</value>
				<value>com/qx/model/Orderstatus.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
			    <!-- hibernate.hbm2ddl.auto=update -->
				hibernate.show_sql=false
				hibernate.formate_sql=false
			</value>
		</property>

	</bean>
	<bean id="mysqlhibernateTemplete" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="mysqlsessionFactory"></property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" p:maxUploadSize="5120000" p:maxInMemorySize="512" />
</beans>